name: deploy

on:
  push:
    branches:
    - main

jobs:

  staging-docker-image:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - run: |
        docker build -f deploy/Dockerfile \
          --build-arg version=${GITHUB_SHA:0:7} \
          --build-arg BUGSNAG_API_KEY=${{ secrets.BUGSNAG_API_KEY }} \
          --build-arg BUGSNAG_APP_VERSION=${GITHUB_SHA:0:7} \
          -t 923411875752.dkr.ecr.us-east-1.amazonaws.com/kurl:${GITHUB_SHA:0:7} .

    - uses: docker/login-action@v2
      with:
        registry: 923411875752.dkr.ecr.us-east-1.amazonaws.com
        username: ${{ secrets.STAGING_ECR_AWS_ACCESS_KEY_ID_SELECT }}
        password: ${{ secrets.STAGING_ECR_AWS_SECRET_ACCESS_KEY_SELECT }}

    - run: |
        docker push 923411875752.dkr.ecr.us-east-1.amazonaws.com/kurl:${GITHUB_SHA:0:7}

  production-docker-image:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - run: |
        docker build -f deploy/Dockerfile \
          --build-arg version=${GITHUB_SHA:0:7} \
          --build-arg BUGSNAG_API_KEY=${{ secrets.BUGSNAG_API_KEY }} \
          --build-arg BUGSNAG_APP_VERSION=${GITHUB_SHA:0:7} \
          -t 799720048698.dkr.ecr.us-east-1.amazonaws.com/kurl:${GITHUB_SHA:0:7} .

    - uses: docker/login-action@v2
      with:
        registry: 799720048698.dkr.ecr.us-east-1.amazonaws.com
        username: ${{ secrets.PRODUCTION_ECR_AWS_ACCESS_KEY_ID_SELECT }}
        password: ${{ secrets.PRODUCTION_ECR_AWS_SECRET_ACCESS_KEY_SELECT }}

    - run: |
        docker push 799720048698.dkr.ecr.us-east-1.amazonaws.com/kurl:${GITHUB_SHA:0:7}

  deploy-staging-eks:
    environment: 
      name: staging
      url: https://k8s.staging.kurl.sh/latest
    runs-on: ubuntu-20.04
    needs:
    - staging-docker-image
    steps:
    - uses: actions/checkout@v3

    - name: kustomize
      run: |
        curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/tags/v2.0.0 | \
          grep browser_download | \
          grep linux | \
          cut -d '"' -f 4 | \
          xargs sudo curl -O -L && \
          sudo mv kustomize_*_linux_amd64 /usr/local/bin/kustomize && \
          sudo chmod +x /usr/local/bin/kustomize
        pushd kustomize/overlays/staging
        kustomize edit set image 923411875752.dkr.ecr.us-east-1.amazonaws.com/kurl:${GITHUB_SHA:0:7}
        kustomize build . > kurl.yaml
        popd

    - name: ssh-key
      env:
        GITOPS_DEPLOY_KEY: ${{ secrets.GITOPS_DEPLOY_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$GITOPS_DEPLOY_KEY" > ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa
        echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' \
          >> ~/.ssh/known_hosts

    - name: release
      run: |
        cd ~ && git clone --single-branch -b main git@github.com:replicatedcom/gitops-deploy
        mkdir -p ~/gitops-deploy/kurl
        mv ${GITHUB_WORKSPACE}/kustomize/overlays/staging/kurl.yaml gitops-deploy/kurl/kurl.yaml
        cd ~/gitops-deploy
        git config user.email "kurl-github-actions@replicated.com"
        git config user.name "kURL GitHub Actions"
        git add .
        git commit --allow-empty -m "https://github.com/replicatedhq/kurl-api/actions/runs/${GITHUB_RUN_ID}" && \
          git push origin main

  deploy-production-eks:
    environment: 
      name: production
      url: https://k8s.kurl.sh/latest
    runs-on: ubuntu-20.04
    needs:
    - production-docker-image
    steps:
    - uses: actions/checkout@v3
    - name: kustomize
      run: |
        curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/tags/v2.0.0 | \
          grep browser_download | \
          grep linux | \
          cut -d '"' -f 4 | \
          xargs sudo curl -O -L && \
          sudo mv kustomize_*_linux_amd64 /usr/local/bin/kustomize && \
          sudo chmod +x /usr/local/bin/kustomize
        pushd kustomize/overlays/production
        kustomize edit set image 799720048698.dkr.ecr.us-east-1.amazonaws.com/kurl:${GITHUB_SHA:0:7}
        kustomize build . > kurl.yaml
        popd

    - name: ssh-key
      env:
        GITOPS_DEPLOY_KEY: ${{ secrets.GITOPS_DEPLOY_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$GITOPS_DEPLOY_KEY" > ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa
        echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' \
          >> ~/.ssh/known_hosts

    - name: release
      run: |
        cd ~ && git clone --single-branch -b release git@github.com:replicatedcom/gitops-deploy
        mkdir -p ~/gitops-deploy/kurl
        mv ${GITHUB_WORKSPACE}/kustomize/overlays/production/kurl.yaml gitops-deploy/kurl/kurl.yaml
        cd ~/gitops-deploy
        git config user.email "kurl-github-actions@replicated.com"
        git config user.name "kURL GitHub Actions"
        git add .
        # git commit --allow-empty -m "https://github.com/replicatedhq/kurl-api/actions/runs/${GITHUB_RUN_ID}" && \
        #   git push origin release
        echo "NOT DEPLOYING"
